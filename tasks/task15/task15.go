package main

import (
	"fmt"
	"math/rand"
)

/*
–ö –∫–∞–∫–∏–º –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞, –∏ –∫–∞–∫ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å? –ü—Ä–∏–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.


var justString string
func someFunc() {
  v := createHugeString(1 << 10)
  justString = v[:100]
}

func main() {
  someFunc()
}

1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π - –≤—Å–µ–≥–¥–∞ –ø–ª–æ—Ö–æ –∏ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º, –∫—Ç–æ-—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å –µ–µ, –º–æ–≥—É—Ç –±—ã—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏–º–µ–Ω –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ
2. –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –±–æ–ª—å—à–æ–π —Å—Ç—Ä–æ–∫–æ–π - –ª—É—á—à–µ –≤—Å–µ–≥–¥–∞ –¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ç–æ, —á—Ç–æ –¥–ª–∏–Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Å—Ä–µ–∑ –≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö, –∏–Ω–∞—á–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã—Ö–æ–¥ –∑–∞
–≥—Ä–∞–Ω–∏—Ü—ã –º–∞—Å—Å–∏–≤–∞ –∏ –ø–∞–Ω–∏–∫–∞
3. –°–æ —Å—Ç—Ä–æ–∫–∞–º–∏ –Ω–∞–¥–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∫—Ä–∞–π–Ω–µ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ: –°—Ç—Ä–æ–∫–∏ –≤ GO –º–æ–≥—É—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –º–Ω–æ–≥–æ–±–∞–π—Ç–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –ø–æ—ç—Ç–æ–º—É –¥–ª—è —Å—Ç—Ä–æ–∫–∏ str := "„Åì„Çì„Å´„Å°„ÅØ" slice := str[0:6]  –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ "„Åì„Çì"
–í —Å—Ç—Ä–æ–∫–∞—Ö —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä "üòäüåç", –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–∞–π—Å–∞ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –ø–æ–ª–æ–º–∫–µ —Å–∏–º–≤–æ–ª–æ–≤ (—Ç–∞–∫ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –º–æ–∂–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å 3 –±–∞–π—Ç–∞, –∞ –º—ã –≤–æ–∑—å–º–µ–º [0:2])

–ò—Å—Ö–æ–¥—è –∏–∑ —ç—Ç–æ–≥–æ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª —É–±—Ä–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É, –≤ —Ñ—É–Ω–∫—Ü–∏–∏ HugeString –ª–∏–±–æ —Å—Ä–∞–∑—É –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤ —Ä—É–Ω, –ª–∏–±–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –∫ —Ç–∞–∫–æ–º—É –º–∞—Å—Å–∏–≤—É
–ü—Ä–æ–≤–µ—Ä—è—Ç—å –µ–≥–æ –¥–ª–∏–Ω—É –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ –µ–≥–æ –æ—Å–Ω–æ–≤–µ
*/

func createHugeString(size int) string {
	alphabet := []rune("ABCDEFGHIJKLMNOPQRSTüòäüåçUVWXYZabcdefgh„Åì„Çì„Å´„Å°„ÅØijklmnopqrstuvwxyz√§√∂√º√ü")

	result := make([]rune, size)
	var i int
	for i < size {
		index := rand.Intn(len(alphabet))
		result[i] = alphabet[index]
		i++
	}
	return string(result)
}

func someFunc(justString *string) {
	v := createHugeString(1 << 10)
	runes := []rune(v)

	if len(runes) >= 100 {
		*justString = string(runes[:100])
	} else { // –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ—à–∏–±–∫—É
		*justString = string(runes)
	}
}

func main() {
	var justString string
	someFunc(&justString)
	fmt.Println(justString)
}
